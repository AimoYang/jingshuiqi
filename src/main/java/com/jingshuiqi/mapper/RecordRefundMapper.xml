<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jingshuiqi.dao.RecordRefundMapper" >
  <resultMap id="BaseResultMap" type="com.jingshuiqi.bean.RecordRefund" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uuid" property="uuid" jdbcType="VARCHAR" />
    <result column="order_uuid" property="orderUuid" jdbcType="VARCHAR" />
    <result column="refund_reason" property="refundReason" jdbcType="VARCHAR" />
    <result column="refund_num" property="refundNum" jdbcType="INTEGER" />
    <result column="refund_fee" property="refundFee" jdbcType="DOUBLE" />
    <result column="deduction" property="deduction" jdbcType="INTEGER" />
    <result column="refuse_reason" property="refuseReason" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="is_success" property="isSuccess" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uuid, order_uuid, refund_reason, refund_num, refund_fee, deduction, refuse_reason,
    create_time, end_time, is_success, is_delete
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from record_refund
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from record_refund
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.jingshuiqi.bean.RecordRefund" >
    insert into record_refund (id, uuid, order_uuid, 
      refund_reason, refund_num, refund_fee, 
      deduction, refuse_reason, create_time,
      end_time, is_success, is_delete
      )
    values (#{id,jdbcType=INTEGER}, #{uuid,jdbcType=VARCHAR}, #{orderUuid,jdbcType=VARCHAR},
      #{refundReason,jdbcType=VARCHAR}, #{refundNum,jdbcType=INTEGER}, #{refundFee,jdbcType=DOUBLE},
      #{deduction,jdbcType=INTEGER}, #{refuseReason,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{endTime,jdbcType=TIMESTAMP}, #{isSuccess,jdbcType=INTEGER}, #{isDelete,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jingshuiqi.bean.RecordRefund" >
    insert into record_refund
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uuid != null" >
        uuid,
      </if>
      <if test="orderUuid != null" >
        order_uuid,
      </if>
      <if test="refundReason != null" >
        refund_reason,
      </if>
      <if test="refundNum != null" >
        refund_num,
      </if>
      <if test="refundFee != null" >
        refund_fee,
      </if>
      <if test="deduction != null" >
        deduction,
      </if>
      <if test="refuseReason != null" >
        refuse_reason,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="isSuccess != null" >
        is_success,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uuid != null" >
        #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="orderUuid != null" >
        #{orderUuid,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null" >
        #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundNum != null" >
        #{refundNum,jdbcType=INTEGER},
      </if>
      <if test="refundFee != null" >
        #{refundFee,jdbcType=DOUBLE},
      </if>
      <if test="deduction != null" >
        #{deduction,jdbcType=INTEGER},
      </if>
      <if test="refuseReason != null" >
        #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSuccess != null" >
        #{isSuccess,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.jingshuiqi.bean.RecordRefund" >
    update record_refund
    <set >
      <if test="uuid != null" >
        uuid = #{uuid,jdbcType=VARCHAR},
      </if>
      <if test="orderUuid != null" >
        order_uuid = #{orderUuid,jdbcType=VARCHAR},
      </if>
      <if test="refundReason != null" >
        refund_reason = #{refundReason,jdbcType=VARCHAR},
      </if>
      <if test="refundNum != null" >
        refund_num = #{refundNum,jdbcType=INTEGER},
      </if>
      <if test="refundFee != null" >
        refund_fee = #{refundFee,jdbcType=DOUBLE},
      </if>
      <if test="deduction != null" >
        deduction = #{deduction,jdbcType=INTEGER},
      </if>
      <if test="refuseReason != null" >
        refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isSuccess != null" >
        is_success = #{isSuccess,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jingshuiqi.bean.RecordRefund" >
    update record_refund
    set uuid = #{uuid,jdbcType=VARCHAR},
      order_uuid = #{orderUuid,jdbcType=VARCHAR},
      refund_reason = #{refundReason,jdbcType=VARCHAR},
      refund_num = #{refundNum,jdbcType=INTEGER},
      refund_fee = #{refundFee,jdbcType=DOUBLE},
      deduction = #{deduction,jdbcType=INTEGER},
      refuse_reason = #{refuseReason,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_success = #{isSuccess,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByOrderUuid" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from record_refund
    where is_delete = 0
    and order_uuid = #{orderUuid}
    limit 1
  </select>
</mapper>